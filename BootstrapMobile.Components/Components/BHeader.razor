@inject MobileBootstrapInterop HistoryInterop
<nav class="navbar navbar-light shadow-sm">
      <div class="container-fluid">
        @if (BackButton)
        {
            <BIconButton Icon="bi bi-chevron-left" OnClick="Back" Visible="BackButton"></BIconButton>
        }

        @if(!BackButton && BApp!.Hamburger)
        {
            <BIconButton Icon="bi bi-list" Size="fs-2" data-bs-toggle="offcanvas" data-bs-target="@Constants.OffCanvasTarget" aria-controls="offcanvasExample" />
        }

        @if (!BackButton && !BApp!.Hamburger)
        {
            <BIconButton Icon="bi bi-chevron-left" OnClick="Back" Visible="false"></BIconButton>
        }


         <!-- Navbar Brand -->
             <span class="navbar-brand">
                 @Title
             </span>

         <!-- Icon Button -->
            @if(HeaderIcon == null)
            {
                <BIconButton Icon="bi bi-chevron-left" OnClick="Back" Visible="false"></BIconButton>
            }else
            {
            @HeaderIcon
            }
        </div>
  </nav>

@code {
    [Parameter] public RenderFragment? HeaderIcon { get; set; }
    [Parameter] public string Title { get; set; } = string.Empty;
    [Parameter] public bool BackButton { get; set; }
    [CascadingParameter]
    public BApp? BApp { get; set; }

    protected override void OnInitialized()
    {
        if (BApp != null)
            BApp.Header = true;
    }

    private async Task Back()
    {
        await HistoryInterop.GoBack();
    }

    private string CreateClass()
    {
        var className = "bi bi-chevron-left fs-2 invisible align-middle";

        if (BackButton)
            className = "bi bi-chevron-left fs-2 align-middle";

        return className;
    }
}
